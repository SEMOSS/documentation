AddPanel ( panel = [ 0 ] , sheet = [ "0" ] ) ;
No message returned from server

Panel ( 0 ) | AddPanelConfig ( config = [ { "type" : "golden" } ] ) ;
No message returned from server

Panel ( 0 ) | AddPanelEvents ( { "onSingleClick" : { "Unfilter" : [ { "panel" : "" , "query" : "<encode>(<Frame> | UnfilterFrame(<SelectedColumn>));</encode>" , "options" : { } , "refresh" : false , "default" : true , "disabledVisuals" : [ "Grid" , "Sunburst" ] , "disabled" : false } ] } , "onBrush" : { "Filter" : [ { "panel" : "" , "query" : "<encode>if((IsEmpty(<SelectedValues>)),(<Frame> | UnfilterFrame(<SelectedColumn>)), (<Frame> | SetFrameFilter(<SelectedColumn>==<SelectedValues>)));</encode>" , "options" : { } , "refresh" : false , "default" : true , "disabled" : false } ] } } ) ;
No message returned from server

Panel ( 0 ) | RetrievePanelEvents ( ) ;
No message returned from server

Panel ( 0 ) | SetPanelView ( "visualization" , "<encode>{"type":"echarts"}</encode>" ) ;
No message returned from server

Panel ( 0 ) | SetPanelView ( "pipeline" ) ;
No message returned from server

Database ( database = [ "2555ec1b-e1a2-4905-91e0-022dc57fc564" ] ) | Select ( Director__Director , Director__Title_FK , Title__MovieBudget , Title__Revenue_Domestic , Title__Revenue_International , Title__RottenTomatoes_Audience , Title__RottenTomatoes_Critics , Title__Title , Genre__Genre , Genre__Title_FK , Studio__Studio , Studio__Title_FK , Nominated__Nominated , Nominated__Title_FK ) .as ( [ Director , Title_FK , MovieBudget , Revenue_Domestic , Revenue_International , RottenTomatoes_Audience , RottenTomatoes_Critics , Title , Genre , Title_FK_1 , Studio , Title_FK_2 , Nominated , Title_FK_3 ] ) | Join ( ( Title , inner.join , Genre ) , ( Title , inner.join , Director ) , ( Title , inner.join , Studio ) , ( Title , inner.join , Nominated ) ) | Distinct ( false ) | Import ( frame = [ CreateFrame ( frameType = [ NATIVE ] , override = [ true ] ) .as ( [ "Movies_FRAME39648" ] ) ] ) ;
{"name": "Movies_FRAME39648", "type": "NATIVE"}

Panel ( 0 ) | SetPanelView ( "text-widget" , "<encode>{"html":"<html>\n<head>\n<style>\n#TextWidget {\n    --dot-color-one: #B383FF;\n    --dot-color-two: #FF788F;\n    --dot-color-four: #786FA0;\n}\n\n#TextWidget .container {\n  display: inline-block;\n  font-size: 10px;\n  font-family: Arial, sans-serif;\n  color: black;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n  width: 100%;\n}\n\n#TextWidget .dot1{\n  height: 10px;\n  width: 10px;\n  max-width: 10%;\n  background-color: var(--dot-color-one);\n  border-radius: 50%;\n  display: inline-block;\n}\n\n#TextWidget .dotText{\n    display: inline-block;\n    text-overflow: ellipsis;\n    max-width: 33%;\n   padding-right: 5px;\n     font-size: 10px;\n}\n\n#TextWidget .dot3{\n  height: 10px;\n  width: 10px;\n  max-width: 10%;\n  background-color: var(--dot-color-two);\n  border-radius: 50%;\n  display: inline-block;\n}\n\n#TextWidget .dot4{\n  height: 10px;\n  width: 10px;\n  max-width: 10%;\n  background-color: var(--dot-color-four);\n  border-radius: 50%;\n  display: inline-block;\n}\n</style>\n</head>\n<body>\n\n<div class=\"container\">\n<div class=\"dot3\"></div>\n<div class=\"dotText\">MovieBudget</div>\n<div class=\"dot4\"></div>\n<div class=\"dotText\">Revenue_Domestic</div>\n<div class=\"dot1\"></div>\n<div class=\"dotText\">Revenue_International</div>\n</div>\n\n</body>\n</html>\n<!-- \n    the color of the dots should correspond with your cbv graph \n    to change the colors, simply edit the root part that assigns to dots to colors\n    on hover, the legend will appear\n-->","varList":[{"name":"","query":""}],"freeze":false,"loading":true}</encode>" ) ;

Panel (0) | SetPanelLabel ("Legend");