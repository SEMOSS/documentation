"use strict";(self.webpackChunkcfg_docs=self.webpackChunkcfg_docs||[]).push([[9403],{81889:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=t(74848),i=t(28453);const r={sidebar_label:"OpenAI Endpoints with Python",sidebar_position:5,slug:"/openai-python"},a="Utilizing CFG Models through OpenAI APIs",s={id:"How To/Establish Connection to CFG Portal/OpenAI Endpoints with Python",title:"Utilizing CFG Models through OpenAI APIs",description:"1. Overview",source:"@site/docs/How To/Establish Connection to CFG Portal/OpenAI Endpoints with Python.md",sourceDirName:"How To/Establish Connection to CFG Portal",slug:"/openai-python",permalink:"/documentation/openai-python",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"OpenAI Endpoints with Python",sidebar_position:5,slug:"/openai-python"},sidebar:"tutorialSidebar",previous:{title:"SEMOSS Installation",permalink:"/documentation/semoss-installation"},next:{title:"Pixels and Reactors",permalink:"/documentation/category/pixels-and-reactors"}},l={},c=[{value:"1. Overview",id:"1-overview",level:2},{value:"2. Installation Guide",id:"2-installation-guide",level:2},{value:"Generate Access Key from your AI Platform",id:"generate-access-key-from-your-ai-platform",level:3},{value:"Install the OpenAI and AI Platform Packages",id:"install-the-openai-and-ai-platform-packages",level:3},{value:"openai",id:"openai",level:5},{value:"openai &lt;= 0.28.1",id:"openai--0281",level:5},{value:"3. Using the AI Platform Endpoints with openai",id:"3-using-the-ai-platform-endpoints-with-openai",level:2},{value:"Step 3.1: <strong>Create a connection to the AI Platform</strong>",id:"step-31-create-a-connection-to-the-ai-platform",level:3},{value:"Step 3.2: <strong>Change the default OpenAI endpoint to AI Platform OpenAI endpoint</strong>",id:"step-32-change-the-default-openai-endpoint-to-ai-platform-openai-endpoint",level:3},{value:"Step 3.3: <strong>Modifying the Code</strong>",id:"step-33-modifying-the-code",level:3},{value:"Chat Completions",id:"chat-completions",level:4},{value:"Completions",id:"completions",level:4},{value:"Embeddings",id:"embeddings",level:4},{value:"4 Langchain with openai",id:"4-langchain-with-openai",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"utilizing-cfg-models-through-openai-apis",children:"Utilizing CFG Models through OpenAI APIs"}),"\n",(0,o.jsx)(n.h2,{id:"1-overview",children:"1. Overview"}),"\n",(0,o.jsx)(n.p,{children:"OpenAI is one of the pioneering companies within the AI landscape. As such, most packages ensure integration with the OpenAI API. Therefore, we have decided to follow suit and allow any CFG Model Engines to be accessed via the OpenAI API."}),"\n",(0,o.jsx)(n.p,{children:"We supposrt the following endpoints listed on the OpenAI website:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://platform.openai.com/docs/guides/text-generation/chat-completions-api",children:"Chat Completions"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://platform.openai.com/docs/guides/text-generation/completions-api",children:"Completions"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://platform.openai.com/docs/guides/embeddings/what-are-embeddings",children:"Embeddings"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"2-installation-guide",children:"2. Installation Guide"}),"\n",(0,o.jsx)(n.h3,{id:"generate-access-key-from-your-ai-platform",children:"Generate Access Key from your AI Platform"}),"\n",(0,o.jsx)(n.p,{children:"The first step to gaining access to the data stored in your SEMOSS platform is to generate an access key and a secret key. To do this, click on the link below. After you have generated your keys, navigate back to this guide."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/documentation/connecting-to-semoss#generating-access-and-secret-keys",children:"Generate Access Key"})}),"\n",(0,o.jsx)(n.h3,{id:"install-the-openai-and-ai-platform-packages",children:"Install the OpenAI and AI Platform Packages"}),"\n",(0,o.jsxs)(n.p,{children:["A ",(0,o.jsx)(n.a,{href:"https://github.com/openai/openai-python/discussions/742",children:"new OpenAI Python"})," library was recently released. We provide examples of how to use the current major version (openai >= 1.0.0) and the old major version (openai <= 0.28.1)."]}),"\n",(0,o.jsx)(n.p,{children:"Open up a command prompt or terminal.\r\nThen, run the following commands to install OpenAI Python API library and AI Platform Python library:"}),"\n",(0,o.jsx)(n.h5,{id:"openai",children:"openai"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pip install openai\r\npip install --upgrade ai-server-sdk\n"})}),"\n",(0,o.jsx)(n.h5,{id:"openai--0281",children:"openai <= 0.28.1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"pip install openai<=0.28.1\r\npip install --upgrade ai-server-sdk\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note"}),"\r\nThis guide assumes that you already have Python (3.9+) and pip installed. If you do not, please follow the ",(0,o.jsx)(n.a,{href:"/documentation/Advanced%20Installation/Local%20BE%20Install%20Guide",children:"Back End Setup"})," section first."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"3-using-the-ai-platform-endpoints-with-openai",children:"3. Using the AI Platform Endpoints with openai"}),"\n",(0,o.jsx)(n.p,{children:"In this walkthrough we will use existing code from the above endpoints and modify it to work with the AI Platform."}),"\n",(0,o.jsxs)(n.h3,{id:"step-31-create-a-connection-to-the-ai-platform",children:["Step 3.1: ",(0,o.jsx)(n.strong,{children:"Create a connection to the AI Platform"})]}),"\n",(0,o.jsx)(n.p,{children:"Every api call that is made usually requires some level of authentication. First we store our credentials so that they only have to be passed once."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Please note"}),": This step is required before moving to any other step."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# import the ai platform package\r\nimport ai_server\r\n\r\n# pass in your access and secret keys to authenticate\r\nserver_connection=ai_server.RESTServer(\r\n    access_key="<your access key>",             # example: "d0033d40-ea83-4083-96ce-17a01451f831"\r\n    secret_key="<your secret key>",             # example: "c2b3fae8-20d1-458c-8565-30ae935c4dfb"\r\n    base="<your monolith api endpoint>"         # example: https://{domain}/{direcotry/path segment}/Monolith/api\r\n)\n'})}),"\n",(0,o.jsxs)(n.h3,{id:"step-32-change-the-default-openai-endpoint-to-ai-platform-openai-endpoint",children:["Step 3.2: ",(0,o.jsx)(n.strong,{children:"Change the default OpenAI endpoint to AI Platform OpenAI endpoint"})]}),"\n",(0,o.jsx)(n.p,{children:"This Python code modifies the default endpoint in openai client and sets an API key. The API key is not required but the package requires one to be set."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"# import the openai package\r\nfrom openai import OpenAI\r\nimport httpx as httpx\r\nhttp_client = httpx.Client()\r\nhttp_client.cookies=server_connection.cookies\r\n\r\n# Modify OpenAI's API key and API base to use CFG's API.\r\nclient = OpenAI(\r\n    api_key=\"EMPTY\",\r\n    base_url=server_connection.get_openai_endpoint(),\r\n    default_headers=server_connection.get_auth_headers(),\r\n    http_client=http_client\r\n)\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"step-33-modifying-the-code",children:["Step 3.3: ",(0,o.jsx)(n.strong,{children:"Modifying the Code"})]}),"\n",(0,o.jsx)(n.p,{children:"We are going to modify the existing examples for each of the endpoints above."}),"\n",(0,o.jsx)(n.h4,{id:"chat-completions",children:"Chat Completions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# original code\r\nresponse = client.chat.completions.create(\r\n    model="gpt-3.5-turbo",\r\n    messages=[\r\n        {"role": "system", "content": "You are a helpful assistant."},\r\n        {"role": "user", "content": "Who won the world series in 2020?"},\r\n        {"role": "assistant", "content": "The Los Angeles Dodgers won the World Series in 2020."},\r\n        {"role": "user", "content": "Where was it played?"}\r\n    ]\r\n)\r\n\r\n# modified code\r\nresponse = client.chat.completions.create(\r\n    model="2c6de0ff-62e0-4dd0-8380-782ac4d40245", # change the model name to a Model Engine ID\r\n    messages=[\r\n        {"role": "system", "content": "You are a helpful assistant."},\r\n        {"role": "user", "content": "Who won the world series in 2020?"},\r\n        {"role": "assistant", "content": "The Los Angeles Dodgers won the World Series in 2020."},\r\n        {"role": "user", "content": "Where was it played?"}\r\n    ],\r\n    extra_body={"insight_id":server_connection.cur_insight} # add the insight_id as an extra param\r\n)\n'})}),"\n",(0,o.jsx)(n.h4,{id:"completions",children:"Completions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# original code\r\nresponse = client.completions.create(\r\n    model="gpt-3.5-turbo-instruct", # change the model name to a Model Engine ID\r\n    prompt="Write a tagline for an ice cream shop."\r\n)\r\n\r\n# modified code\r\nresponse = client.completions.create(\r\n    model="4801422a-5c62-421e-a00c-05c6a9e15de8", # change the model name to a Model Engine ID\r\n    prompt="Write a tagline for an ice cream shop.",\r\n    extra_body={"insight_id":server_connection.cur_insight} # add the insight_id as an extra param\r\n)\n'})}),"\n",(0,o.jsx)(n.h4,{id:"embeddings",children:"Embeddings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# original code\r\nclient.embeddings.create(\r\n    input=["Your text string goes here"],\r\n    model="text-embedding-ada-002",\r\n)\r\n\r\n# modified code\r\nclient.embeddings.create(\r\n    input=["Your text string goes here"],\r\n    model="cb661f04-cb30-48fd-aafc-b4d422ce24e4",\r\n    extra_body={"insight_id":server_connection.cur_insight} # add the insight_id as an extra param\r\n)\n'})}),"\n",(0,o.jsx)(n.h3,{id:"4-langchain-with-openai",children:"4 Langchain with openai"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from langchain_openai import ChatOpenAI\r\nfrom langchain.prompts.chat import (\r\n    ChatPromptTemplate,\r\n    HumanMessagePromptTemplate,\r\n    SystemMessagePromptTemplate,\r\n)\r\nfrom langchain.schema import HumanMessage, SystemMessage\r\n\r\nimport httpx as httpx\r\nhttp_client = httpx.Client()\r\nhttp_client.cookies=server_connection.cookies\r\n\r\nchat = ChatOpenAI(\r\n    api_key="EMPTY",\r\n    base_url=server_connection.get_openai_endpoint(),\r\n    default_headers=server_connection.get_auth_headers(),\r\n    extra_body={"insight_id":server_connection.cur_insight},\r\n    http_client=http_client,\r\n    model="2c6de0ff-62e0-4dd0-8380-782ac4d40245",\r\n)\r\n\r\nmessages = [\r\n    SystemMessage(\r\n        content="You are a helpful assistant that translates English to French."\r\n    ),\r\n    HumanMessage(\r\n        content="Translate this sentence from English to French. I love programming."\r\n    ),\r\n]\r\nprint(chat(messages))\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var o=t(96540);const i={},r=o.createContext(i);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);